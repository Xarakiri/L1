package main

import "fmt"

/*
Разработать конвейер чисел.
Даны два канала: в первый пишутся числа (x) из массива,
во второй — результат операции x*2, после чего
данные из второго канала должны выводиться в stdout.
*/

// функция, которая преобразует список целых чисел в канал,
// который посылает числа из этого списка.
// Внутри этой функции запускается go-рутина, которая отправляет
// целые числа в канал и закрывает этот канал, когда все числа отправлены
func gen(nums []int) <-chan int {
	out := make(chan int)
	go func() {
		for _, n := range nums {
			out <- n
		}
		close(out)
	}()
	return out
}

// забирает числа из канала и возвращает новый канал,
// который отдает квадрат каждого полученного числа.
// После того как входящий канал закрыт и все значения на этом шаге
// отправлены в исходящий канал, то исходящий канал закрывается
func sq(in <-chan int) <-chan int {
	out := make(chan int)
	go func() {
		for n := range in {
			out <- n * n
		}
		close(out)
	}()
	return out
}

func main() {
	for n := range sq(gen([]int{2, 3, 4, 5})) {
		fmt.Println(n)
	}
}
